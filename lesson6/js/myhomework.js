
// task 1
// Дано натуральное число n. Выведите все числа от 1 до n.

// function numberOutput(n) {
//     if (n < 2) return n;
//   return numberOutput(n + 1);
// }
// console.log(numberOutput(5)); 

// task 2
// Даны два целых числа A и В (каждое в отдельной строке). Выведите все числа
// от A до B включительно, в порядке возрастания, если A < B, или в порядке
// убывания в противном случае.

// let arr = []
// function numberOutput(a, b) {
  
// if(a<=b){
// for(i=a; i<=b; i++)
// {
//   arr.push(i)
// }
// }
// else {
//   for(i=a; i>=b; i--)
//   {
//     arr.push(i)
//   }
//   }
// }
// numberOutput(3, 8)
// console.log(arr)

// task3
// Дано натуральное число N. Вычислите сумму его цифр.
// При решении этой задачи нельзя использовать строки, списки, массивы (ну и
// циклы, разумеется).

// function sum(N){
//   if (N === 0) {
//       return 0;
//   } else {
//       return N + sum(--N)
//   }
// }

// alert(sum(3));    

// task4
// Дано натуральное число N. Выведите все его цифры по одной, в обратном
// порядке, разделяя их пробелами или новыми строками.
// При решении этой задачи нельзя использовать строки, списки, массивы (ну и
// циклы, разумеется). Разрешена только рекурсия и целочисленная арифметика.

// function numberOutput(N) {
//     if (N === 0) {
//       return 0;
//   } else {
//       return N + " " + numberOutput(--N)
//   }
// }
// alert(numberOutput(3)); 

// task5
// Дано натуральное число N. Выведите все его цифры по одной, в обычном
// порядке, разделяя их пробелами или новыми строками.
// При решении этой задачи нельзя использовать строки, списки, массивы (ну и
// циклы, разумеется). Разрешена только рекурсия и целочисленная арифметика.

// function numberOutput(N) {
//     if (N < 1) {
//       return N;
//   } else {
//       return numberOutput(N - 1) + " " + N
//   }
// }
// alert(numberOutput(3)); 

// task 6
// Даны два массива: ['a', 'b', 'c'] и [1, 2, 3]. Объедините их вместе.

// let arr = ['a', 'b', 'c']

// let arr1 = [1, 2, 3]

// console.log(arr.concat(arr1))

// task7
// Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3

// let arr = ['a', 'b', 'c']
// let arr1 = [1, 2, 3]

// for(i=0; i<arr1.length; i++)
// {
//   arr.push(arr1[i])
// }
// console.log(arr)

// task8
// Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.

// let arr = [1, 2, 3]
// let arr1 = [6, 5, 4]

// for(i=0; i<arr1.length; i++)
// {
//   arr.unshift(arr1[i])
// }
// console.log(arr)

// task9
// Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [1,
//   2, 3].

// let arr = [1, 2, 3, 4, 5]
// let arr1 = arr.slice(0, 3)
//   console.log(arr1)

// task10
// Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый элементы [4,
//   5].

// let arr = [1, 2, 3, 4, 5]
// let arr1 = arr.slice(3)
// console.log(arr1)

// task11
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте массив в [1, 4, 5].

// let arr = [1, 2, 3, 4, 5]
// arr.splice(1, 2)
// console.log(arr)

// task12
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в новый массив
// элементы [2, 3, 4].

// let arr = [1, 2, 3, 4, 5]
// let arr1 = arr.splice(1, 3)
// console.log(arr1)

// task13
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 2,
//   3, 'a', 'b', 'c', 4, 5]

// let arr = [1, 2, 3, 4, 5]
// arr.splice(3, 0, 'a', 'b', 'c')
// console.log(arr)

// task14
// Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него массив [1, 'a',
// 'b', 2, 3, 4, 'c', 5, 'e']

// let arr = [1, 2, 3, 4, 5]
// arr.splice(1, 0, 'a', 'b')
// arr.splice(7, 0, 'e')
// arr.splice(6, 0, 'c')
// console.log(arr)




